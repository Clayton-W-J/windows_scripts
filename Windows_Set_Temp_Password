https://github.com/MichaelGrafnetter/DSInternals/releases
<#
.SYNOPSIS
    Collects current user password (hash), replaces with new password (hash), then converts back to old password (hash)
    Author: Josh Block x Savion Iota
.NOTES
    Version: 1.0.0
    Date: 09.19.23
    Type: Public
.LINK
    https://github.com/j0shbl0ck
    https://github.com/MichaelGrafnetter/DSInternals/releases
    https://www.dsinternals.com/en/retrieving-active-directory-passwords-remotely/
#>



while ($true) {
    $user = Read-Host -Prompt Username
    if (Get-ADUser -Filter "SAMAccountName -eq `"$user`"") {
        $temp = "{0}{1}!" -f (((65..90) + (97..122) | Get-Random -Count 7 | %{[char]$_}) -join ''), (Get-Random -Minimum 1000 -Maximum 9999)
        $pw = ([System.BitConverter]::ToString((Get-ADReplAccount -SamAccountName $user -Server localhost).NTHash) -replace '-','').ToLower()
        Write-Host "Old hash: $pw"
        Set-ADAccountPassword $user -Reset -NewPassword (ConvertTo-SecureString -AsPlainText $temp -Force)
        Write-Host "Temporary password: $temp`nPress Enter to change the password back..."
        Read-Host
        Set-SamAccountPasswordHash -Domain LU -SamAccountName $user -NTHash $pw
    } else {
        Write-Error "Cannot find user $user" -ErrorAction Continue
    }
}
